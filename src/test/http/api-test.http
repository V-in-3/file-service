POST {{file-service}}/file
Content-Type: application/json
Accept: application/json

{
  "name": "example1.pdf",
  "size": "10500"
}

> {%
    client.test("Upload file", function() {
    client.assert(response.status === 200, "Response status must be 200");
    client.assert(response.body.id !== null, "Id must be present");

    client.global.set("id", response.body.id);
  });
%}

###

POST {{file-service}}/file/{{id}}/tags
Content-Type: application/json
Accept: application/json

{
  "tags": ["tag1", "tag2", "tag10"]
}

> {%
    client.test("Assign tags", function() {
    client.assert(response.status === 200, "Response status must be 200");
    client.assert(response.body.success === true, "Result must be true");
    });
%}

###

GET {{file-service}}/file?tags=tag10&page=0&size=5
Content-Type: application/json
Accept: application/json

> {%
    client.test("Assign tags", function() {
    client.assert(response.status === 200, "Response status must be 200");
    client.assert(response.body.success === true, "Result must be true");
    });
%}

###

DELETE {{file-service}}/file/{{id}}/tags
Content-Type: application/json
Accept: application/json

{
  "tags": ["tag1"]
}

> {%
    client.test("Remove tags", function() {
    client.assert(response.status === 200, "Response status must be 200");
    client.assert(response.body.success === true, "Result must be true");
    });
%}

###

DELETE {{file-service}}/file/{{id}}
Accept: application/json

> {%
    client.test("Remove file by id", function() {
    client.assert(response.status === 200, "Response status must be 200");
    client.assert(response.body.success === true, "Result must be true");
    });
%}

###